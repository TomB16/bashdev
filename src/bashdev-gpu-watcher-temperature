#!/bin/bash

#
# bashdev - BASH general purpose libraries
# Copyright (C) 2025 Tom Brown
#
# This file is part of bashdev
#
# bashdev is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# bashdev is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with bashdev.  If not, see <https://www.gnu.org/licenses/>.
#


source bashdev-gpu


# parameters

WATCHER_INTERVAL="${1:-10}"  # Default to 10 seconds
WATCHER_SEM="${2:-/tmp/bashdev.gpu.temp.sem}"
WATCHER_RESULT_FILE="${3:-/tmp/gpu.temp.result}"


# running totals

SAMPLES=0
SAMPLES_MAX=$(( (4 * 60 * 60) / WATCHER_INTERVAL ))		# four hour limit on taking samples to prevent runaway process from running forever
TEMP_TOTAL=0


# debug

#echo "$WATCHER_INTERVAL" >> /tmp/log
#echo "$WATCHER_SEM" >> /tmp/log
#echo "$WATCHER_RESULT_FILE" >> /tmp/log


# sample loop

while [[ ! -f "$WATCHER_SEM" ]]; do

    # read the current CPU frequency in MHz

    TEMP=$(gpu::temperatureGet)


	# running totals

    TEMP_TOTAL=$(echo "$TEMP_TOTAL + $TEMP" | bc -l)
    SAMPLES=$((SAMPLES + 1))


	# time limit

	if [ "$SAMPLES" -ge "$SAMPLES_MAX" ]; then 	touch "$WATCHER_SEM"; 	fi


    # Sleep, but exit early if semaphore is created

    if command -v inotifywait >/dev/null 2>&1; then
        timeout "$WATCHER_INTERVAL" inotifywait --include "$WATCHER_SEM" -e create -q /tmp > /dev/null 2>&1
    else
        sleep "$WATCHER_INTERVAL"
    fi

done


# save result for hand-off

if (( SAMPLES > 0 )); then
    TEMP_AVE=$(echo "$TEMP_TOTAL / $SAMPLES" | bc -l)
	printf "%.2f" "$TEMP_AVE" > "$WATCHER_RESULT_FILE"
else
    echo "N/A" >> $WATCHER_RESULT_FILE
fi


# Optionally clean up the stop file

rm -f "$WATCHER_SEM"

